{
	"openapi": "3.0.3",
	"info": {
		"title": "Purpleslate Kea Auth Service API",
		"description": "Welcome to Kea Auth Service API Documentation.\n## Overview\nThe Kea Auth Service API implements a [RESTful API Design](https://learn.microsoft.com/en-us/azure/architecture/best-practices/api-design). The API has predictable resource-oriented URLs, accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\n## Rate Limiting\nTo ensure a fair use of our services, we enforce rate limits on API requests. The rate limit is set at 100 requests per minute. If you exceed this limit, you will receive a `429 Too Many Requests` response.\n## Error Handling\nThe API uses standard HTTP status codes to indicate the success or failure of an API request. Here are some common status codes:\n- `200 OK`: The request was successful.\n- `400 Bad Request`: The request was invalid or cannot be otherwise served.\n- `401 Unauthorized`: Authentication failed or user does not have permissions for the requested operation.\n- `404 Not Found`: The requested resource could not be found.\n- `500 Internal Server Error`: An error occurred on the server.",
		"contact": {
			"email": "kea@purpleslate.in"
		},
		"license": {
			"name": "ISC License",
			"url": "https://www.isc.org/licenses/"
		},
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "http://localhost:9709/ps-auth-service",
			"description": "localdev server"
		},
		{
			"url": "https://api.keadev.purpleslate.com/api/v1/ps-kea-auth/",
			"description": "Dev server"
		}
	],
	"tags": [
		{
			"name": "Health",
			"description": "Endpoints"
		},
		{
			"name": "Login",
			"description": "Endpoints"
		},
		{
			"name": "Biometric",
			"description": "Endpoints"
		},
		{
			"name": "Invite",
			"description": "Endpoints"
		},
		{
			"name": "User",
			"description": "Endpoints"
		}
	],
	"paths": {
		"/health": {
			"get": {
				"tags": [
					"Health"
				],
				"summary": "Auth service health check",
				"description": "Checks the Auth service health",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Health Check API Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HealthResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not found"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/authenticate": {
			"get": {
				"tags": [
					"Login"
				],
				"description": "Socket auth",
				"summary": "Socket auth",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/feature": {
			"post": {
				"tags": [
					"User"
				],
				"description": "Get the feature list in Kea",
				"summary": "Get the feature list in Kea",
				"parameters": [
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/feature/role": {
			"post": {
				"tags": [
					"User"
				],
				"description": "Get the feature list in Kea",
				"summary": "Get the feature list in Kea",
				"parameters": [
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/role/assign": {
			"post": {
				"tags": [
					"User"
				],
				"deprecated": true,
				"summary": "Assign roles to User",
				"description": "Assign roles to User",
				"responses": {
					"404": {
						"description": "API DEPRECATED"
					}
				}
			}
		},
		"/user/role/custom/create": {
			"post": {
				"tags": [
					"User"
				],
				"deprecated": true,
				"summary": "Create custom role",
				"description": "Create custom role",
				"responses": {
					"404": {
						"description": "API DEPRECATED"
					}
				}
			}
		},
		"/user/role/custom": {
			"put": {
				"tags": [
					"User"
				],
				"deprecated": true,
				"summary": "Assign custom roles to user",
				"description": "Assign custom roles to user",
				"responses": {
					"404": {
						"description": "API DEPRECATED"
					}
				}
			}
		},
		"/teams/auth-token": {
			"post": {
				"tags": [
					"Login"
				],
				"description": "Ask Kea teams app",
				"summary": "Ask Kea teams app",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user": {
			"post": {
				"tags": [
					"User"
				],
				"summary": "Get user data by user details",
				"description": "Get user data by user details",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/details": {
			"post": {
				"tags": [
					"User"
				],
				"description": "To get users details from account",
				"summary": "To get users details from account",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserDetailsRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/role": {
			"post": {
				"tags": [
					"User"
				],
				"deprecated": true,
				"summary": "To get unassigned user roles",
				"description": "To get unassigned user roles",
				"responses": {
					"404": {
						"description": "API DEPRECATED"
					}
				}
			}
		},
		"/user/list": {
			"post": {
				"tags": [
					"User"
				],
				"deprecated": true,
				"summary": "To get users details from Kea backend",
				"description": "To get users details from Kea backend",
				"responses": {
					"404": {
						"description": "API DEPRECATED"
					}
				}
			}
		},
		"/dataset/create_invite": {
			"post": {
				"tags": [
					"Invite"
				],
				"deprecated": true,
				"summary": "Create user invite",
				"description": "To invite users into dataset",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InviteUserRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/dataset/accept_invite": {
			"post": {
				"tags": [
					"Invite"
				],
				"deprecated": true,
				"summary": "Accept user invite",
				"description": "Accept invitation from user, Its a internal API calling from Accounts",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/refreshToken/{token}": {
			"post": {
				"tags": [
					"Login"
				],
				"summary": "Get Refresh token for OAuth2 and Accounts Token",
				"description": "To get Refresh token for OAuth2 and Accounts Token",
				"parameters": [
					{
						"name": "token",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/validate_token": {
			"post": {
				"tags": [
					"Login"
				],
				"summary": "Validate token",
				"description": "To sigin into the web page",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ValidateTokenRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/v2/user/validate_token": {
			"post": {
				"tags": [
					"Login"
				],
				"summary": "Validate token V2",
				"description": "To sigin into the web page",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/v2/user/refreshToken": {
			"post": {
				"tags": [
					"Login"
				],
				"summary": "Get Refresh token for OAuth2 and Accounts Token V2",
				"description": "To get Refresh token for OAuth2 and Accounts Token",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/logout": {
			"post": {
				"tags": [
					"Login"
				],
				"summary": "Logout from the web page",
				"description": "To Signout from the web page",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LogoutRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/delete": {
			"post": {
				"tags": [
					"User"
				],
				"deprecated": true,
				"summary": "Delete user",
				"description": "To delete user from Kea backend as well as Accounts backend",
				"responses": {
					"404": {
						"description": "API DEPRECATED"
					}
				}
			}
		},
		"/user/biometric/create": {
			"post": {
				"tags": [
					"Biometric"
				],
				"summary": "Register biometric login",
				"description": "Register biometric login",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/biometric/delete": {
			"post": {
				"tags": [
					"Biometric"
				],
				"summary": "Delete Mobile biometric login",
				"description": "Delete Mobile biometric login",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/biometric/login": {
			"post": {
				"tags": [
					"Biometric"
				],
				"summary": "Mobile biometric login",
				"description": "Mobile biometric login",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/deep-link/create": {
			"post": {
				"tags": [
					"Login"
				],
				"deprecated": true,
				"summary": "Create deep link",
				"description": "Create deep link",
				"responses": {
					"404": {
						"description": "API DEPRECATED"
					}
				}
			}
		},
		"/v1/dataset/create_invite": {
			"post": {
				"tags": [
					"Invite"
				],
				"summary": "Create user invite V1",
				"description": "To invite users into dataset",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/v1/dataset/resend_invite": {
			"post": {
				"tags": [
					"Invite"
				],
				"summary": "Resend user invite V1",
				"description": "Resend user invite",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/v1/dataset/delete_invite": {
			"post": {
				"tags": [
					"Invite"
				],
				"summary": "Delete user invite V1",
				"description": "Delete user invite",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/create": {
			"post": {
				"tags": [
					"User"
				],
				"description": "Create new user",
				"summary": "Create new user",
				"parameters": [
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer"
			}
		},
		"schemas": {
			"UserDetailsRequest": {
				"type": "object",
				"properties": {
					"accountId": {
						"type": "integer",
						"example": "87"
					}
				}
			},
			"InviteUserRequest": {
				"type": "object",
				"properties": {
					"accountId": {
						"type": "string",
						"example": "2"
					},
					"appId": {
						"type": "string",
						"example": "a49b2d9410b874db9a654e39bbc6caa53"
					},
					"userDetails": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"email": {
									"type": "string",
									"example": "balaji.r@purpleslate.in"
								},
								"userRole": {
									"type": "string",
									"example": "viewer"
								}
							}
						},
						"example": [
							{
								"email": "balaji.r@purpleslate.in",
								"userRole": "viewer"
							}
						]
					},
					"datasetName": {
						"type": "string",
						"example": "Sales"
					},
					"fromUser": {
						"type": "string",
						"example": "vijayarahavan.k@purpleslate.in"
					}
				}
			},
			"ValidateTokenRequest": {
				"type": "object",
				"properties": {
					"token": {
						"type": "string",
						"example": "eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJ7XCJ0ZW5hbnROYW1lXCI6XCJiYWxhamkuckBwdXJwbGVzbGF0ZS5pblwiLFwiYXBwTmFtZVwiOlwiS2VhXCIsXCJpbWFnZVVybFwiOlwiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YVh6QWFtbkpBalpObzJjam0zdDFiaFZrNXhkSG16OGNUaTIwSGM9czk2LWNcIixcInRlbmFudElkXCI6MixcIm5hbWVcIjpcIlZpamF5YXJhaGF2YW4gS1wiLFwic29jaWFsUmVnXCI6dHJ1ZSxcImVtYWlsSWRcIjpcInZpamF5YXJhaGF2YW4ua0BwdXJwbGVzbGF0ZS5pblwiLFwidXNlcklkXCI6NX0iLCJleHAiOjE2ODAyMDUxMDEsImlzcyI6IlQxOEhNbVVzZVhDNEJUQ0lzS09WVUhMTGkzRzh3YlhiIn0.y8LioVwyAn7T17Uy6I2Fmp26Kz5wKRfXIcH0nvGX4eY"
					},
					"userId": {
						"type": "string",
						"example": "5"
					}
				}
			},
			"LogoutRequest": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"example": "vijayarahavan.k@purpleslate.in"
					},
					"accountId": {
						"type": "string",
						"example": "2"
					}
				}
			},
			"HealthResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"example": "success"
					},
					"displayMessage": {
						"type": "string",
						"example": "Auth service is up and running"
					},
					"internalErrorMessage": {
						"type": "string",
						"example": ""
					}
				}
			}
		}
	}
}