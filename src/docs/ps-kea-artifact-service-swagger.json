{
	"openapi": "3.0.3",
	"info": {
		"title": "Purpleslate Kea Artifact Service API",
		"description": "Welcome to Kea Artifact Service API Documentation.\n## Overview\nThe Kea Artifact Service API implements a [RESTful API Design](https://learn.microsoft.com/en-us/azure/architecture/best-practices/api-design). The API has predictable resource-oriented URLs, accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\n## Rate Limiting\nTo ensure a fair use of our services, we enforce rate limits on API requests. The rate limit is set at 100 requests per minute. If you exceed this limit, you will receive a `429 Too Many Requests` response.\n## Error Handling\nThe API uses standard HTTP status codes to indicate the success or failure of an API request. Here are some common status codes:\n- `200 OK`: The request was successful.\n- `400 Bad Request`: The request was invalid or cannot be otherwise served.\n- `401 Unauthorized`: Authentication failed or user does not have permissions for the requested operation.\n- `404 Not Found`: The requested resource could not be found.\n- `500 Internal Server Error`: An error occurred on the server.",
		"contact": {
			"email": "kea@purpleslate.in"
		},
		"license": {
			"name": "ISC License",
			"url": "https://www.isc.org/licenses/"
		},
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "http://localhost:9701/ps-kea-artifact",
			"description": "localhost server"
		},
		{
			"url": "https://api.keadev.purpleslate.com/api/v1/ps-kea-artifact/",
			"description": "Dev server"
		}
	],
	"tags": [
		{
			"name": "Health",
			"description": "Endpoints"
		},
		{
			"name": "Query",
			"description": "Endpoints"
		},
		{
			"name": "Query Suggestion",
			"description": "Endpoints"
		},
		{
			"name": "Audio",
			"description": "Endpoints"
		},
		{
			"name": "Favorites",
			"description": "Endpoints"
		},
		{
			"name": "Introduction",
			"description": "Endpoints"
		},
		{
			"name": "Feedback",
			"description": "Endpoints"
		},
		{
			"name": "Thread",
			"description": "Endpoints"
		},
		{
			"name": "Actions",
			"description": "Endpoints"
		},
		{
			"name": "Comment",
			"description": "Endpoints"
		},
		{
			"name": "Metadata",
			"description": "Endpoints"
		},
		{
			"name": "Tag",
			"description": "Endpoints"
		},
		{
			"name": "Storyline",
			"description": "Endpoints"
		},
		{
			"name": "Theme",
			"description": "Endpoints"
		},
		{
			"name": "Notification",
			"description": "Endpoints"
		},
		{
			"name": "Sentiment",
			"description": "Endpoints"
		},
		{
			"name": "Pin",
			"description": "Endpoints"
		},
		{
			"name": "Summary",
			"description": "Endpoints"
		},
		{
			"name": "Invite",
			"description": "Endpoints"
		},
		{
			"name": "Bin",
			"description": "Endpoints"
		},
		{
			"name": "Tryme",
			"description": "Endpoints"
		},
		{
			"name": "RBAC",
			"description": "Endpoints"
		}
	],
	"paths": {
		"/health": {
			"get": {
				"tags": [
					"Health"
				],
				"summary": "Artifact service health check",
				"description": "Checks the Artifact service health",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Health Check API Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HealthResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not found"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/v2/artifact": {
			"post": {
				"tags": [
					"Query"
				],
				"summary": "V2 - Store queries in artifact collection",
				"description": "storing the queries in the artifact collection",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ArtifactV2Request"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/slack-integration": {
			"post": {
				"tags": [
					"Query"
				],
				"summary": "Slack to kea health check",
				"description": "Slack will call this API to ping Kea health",
				"parameters": [],
				"responses": {
					"default": {
						"description": ""
					}
				}
			},
			"get": {
				"tags": [
					"Query"
				],
				"summary": "Slack to kea health check",
				"description": "Slack will call this API to ping Kea health",
				"parameters": [],
				"responses": {
					"default": {
						"description": ""
					}
				}
			}
		},
		"/artifact": {
			"post": {
				"tags": [
					"Query"
				],
				"deprecated": true,
				"summary": "V1 - Store queries in artifact collection",
				"description": "storing the queries in the artifact collection",
				"parameters": [
					{
						"name": "username",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "channel-type",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"author": {
										"example": "any"
									},
									"userId": {
										"example": "any"
									},
									"appId": {
										"example": "any"
									},
									"channelType": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Query"
				],
				"deprecated": true,
				"summary": "Edit artifact collection",
				"description": "Edit artifact collection",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"example": "any"
									},
									"transcript": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/app-query-metadata": {
			"post": {
				"tags": [
					"Query"
				],
				"summary": "Query app metadata",
				"description": "Insert chosen suggestion to mongo, get query count",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"chosenSuggestion": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/queryautosuggest": {
			"post": {
				"tags": [
					"Query Suggestion"
				],
				"summary": "Get auto suggested queries",
				"description": "To get the auto suggest queries",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/queryrecenttrendingsuggest": {
			"post": {
				"tags": [
					"Query Suggestion"
				],
				"summary": "Get recent trending suggested queries",
				"description": "To get recent queries for suggestion",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"topic": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/audio": {
			"post": {
				"tags": [
					"Audio"
				],
				"deprecated": true,
				"summary": "Audio",
				"description": "Audio",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/favourites": {
			"post": {
				"tags": [
					"Favorites"
				],
				"deprecated": true,
				"summary": "Add dialog to favorite thread",
				"description": "To add a dialog to favorites thread",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "channeltype",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"userId": {
										"example": "any"
									},
									"appId": {
										"example": "any"
									},
									"channelType": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"Favorites"
				],
				"deprecated": true,
				"summary": "Get favorite kea search",
				"description": "To get favorites for kea search",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "widgettype",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "search_term",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/querysmartsuggest": {
			"get": {
				"tags": [
					"Query Suggestion"
				],
				"summary": "Get trending and recent queries for users",
				"description": "To get trending and recent query for the user",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/isintrojsshown": {
			"get": {
				"tags": [
					"Introduction"
				],
				"summary": "Introduction",
				"description": "Introduction",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/detailedfeedback": {
			"post": {
				"tags": [
					"Feedback"
				],
				"summary": "Collect feedback from user",
				"description": "To collect feedback from user",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DetailedFeedbackRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/feedback": {
			"get": {
				"tags": [
					"Feedback"
				],
				"deprecated": true,
				"summary": "Get feedback from user",
				"description": "To get the feedback from users",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/users": {
			"get": {
				"tags": [
					"Metadata"
				],
				"summary": "Get users dataset",
				"description": "To get dataset users",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/dialogs": {
			"post": {
				"tags": [
					"Thread"
				],
				"summary": "Create Dialog",
				"description": "Create Dialog",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"dialogid": {
										"example": "any"
									},
									"title": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/dialogs/search": {
			"post": {
				"tags": [
					"Thread"
				],
				"summary": "Search history or inbox queries",
				"description": "For history or inbox queries",
				"parameters": [],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DialogSearchRequest"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/dialogs/{dialogid}/users": {
			"put": {
				"tags": [
					"Thread"
				],
				"summary": "Add User from dialog",
				"description": "Add User from dialog",
				"parameters": [
					{
						"name": "dialogid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"users": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"Thread"
				],
				"summary": "Get users for the dialog",
				"description": "Get users for the dialog",
				"parameters": [
					{
						"name": "dialogid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/dialogs/{dialogid}": {
			"put": {
				"tags": [
					"Thread"
				],
				"summary": "Edit Title/description about dialog",
				"description": "Edit Title/description about dialog",
				"parameters": [
					{
						"name": "dialogid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			},
			"get": {
				"tags": [
					"Thread"
				],
				"summary": "Get Metadata for that dialog",
				"description": "Get Metadata for that dialog",
				"parameters": [
					{
						"name": "dialogid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/dialogs/{dialogid}/users/delete": {
			"put": {
				"tags": [
					"Thread"
				],
				"summary": "Delete User from dialog",
				"description": "Delete User from dialog",
				"parameters": [
					{
						"name": "dialogid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"users": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/applicationTheme/{id}": {
			"get": {
				"tags": [
					"Theme"
				],
				"summary": "To get theme",
				"description": "To get theme",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/actions": {
			"get": {
				"tags": [
					"Actions"
				],
				"summary": "Get related actions for dialog",
				"description": "To get related actions for dialog level",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/actions/detail/{id}": {
			"get": {
				"tags": [
					"Actions"
				],
				"summary": "Get actions detail",
				"description": "Get actions detail",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "b1a932eb-2584-45b4-913e-bc5ebb2d0179"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "dialogid",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/syncartifact": {
			"put": {
				"tags": [
					"Thread"
				],
				"summary": "Update last used time for the dialog",
				"description": "Update last used time for the dialog",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"dialogId": {
										"example": "any"
									},
									"appId": {
										"example": "any"
									},
									"userId": {
										"example": "any"
									},
									"entities": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/comments": {
			"post": {
				"tags": [
					"Comment"
				],
				"deprecated": true,
				"summary": "Create comment in discussion thread",
				"description": "Create comment in discussion thread",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"conversationid": {
										"example": "any"
									},
									"dialogid": {
										"example": "any"
									},
									"message": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"Comment"
				],
				"summary": "Get list of comments for discussion thread",
				"description": "Get list of comments for discussion thread",
				"parameters": [
					{
						"name": "conversationid",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "query",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/comments/socket": {
			"post": {
				"tags": [
					"Comment"
				],
				"summary": "Create comment in discussion thread from socket",
				"description": "Create comment in discussion thread from socket",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/comments/reaction": {
			"post": {
				"tags": [
					"Comment"
				],
				"summary": "Process reaction for comments in thread",
				"description": "Process reaction for comments in thread",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"messageId": {
										"example": "any"
									},
									"emoticon": {
										"example": "any"
									},
									"action": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/comments/mycomments": {
			"get": {
				"tags": [
					"Comment"
				],
				"summary": "Get users comments in discussion thread",
				"description": "Get users comments in discussion thread",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "conversationid",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "query",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/notifications": {
			"get": {
				"tags": [
					"Notification"
				],
				"summary": "Get notifications",
				"description": "To get the notifications",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page_no",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page_limit",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/notifications/{notificationid}/acknowledge": {
			"post": {
				"tags": [
					"Notification"
				],
				"summary": "Trigger notifications",
				"description": "trigger isSeen to false for specific notificationID",
				"parameters": [
					{
						"name": "notificationid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/notifications/user/acknowledge": {
			"post": {
				"tags": [
					"Notification"
				],
				"summary": "Trigger notifications for user",
				"description": "All notification to read for user",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/notifications/query/acknowledge": {
			"post": {
				"tags": [
					"Notification"
				],
				"summary": "Trigger notifications for users dicussion thread",
				"description": "All notification to read for that discussion thread",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "conversationThreadId",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/dialogs/{dialogid}/comments/metadata": {
			"get": {
				"tags": [
					"Comment"
				],
				"summary": "Get comments in dialog level",
				"description": "To get comments in dialog level",
				"parameters": [
					{
						"name": "dialogid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/storyline": {
			"post": {
				"tags": [
					"Storyline"
				],
				"summary": "Create new storyline",
				"description": "Create new storyline",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateStorylineRequest"
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"Storyline"
				],
				"summary": "Get storyline",
				"description": "Get storyline",
				"parameters": [
					{
						"name": "storylineId",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/storyline/search": {
			"post": {
				"tags": [
					"Storyline"
				],
				"summary": "Search storyline",
				"description": "To search the storyline data",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SearchStorylineRequest"
							}
						}
					}
				}
			}
		},
		"/storyline/{storylineId}/query": {
			"put": {
				"tags": [
					"Storyline"
				],
				"summary": "Add query to storyline",
				"description": "To add a query to storyline",
				"parameters": [
					{
						"name": "storylineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddQueryStorylineRequest"
							}
						}
					}
				}
			}
		},
		"/queryutterance": {
			"get": {
				"tags": [
					"Storyline"
				],
				"summary": "Get query utterance",
				"description": "Get Query's utterance for queryId",
				"parameters": [
					{
						"name": "queryId",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/storyline/replace": {
			"post": {
				"tags": [
					"Storyline"
				],
				"summary": "Replace storyline with another storyline",
				"description": "For replacing storyline with another storyline",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"storyline": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/storyline/inprogress": {
			"post": {
				"tags": [
					"Storyline"
				],
				"summary": "Set storyboard/storyline to inprogress",
				"description": "For setting storyboard/storyline to inprogress",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"storylineId": {
										"example": "any"
									},
									"storyPoints": {
										"example": "any"
									},
									"isStoryBoardRefresh": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/storyline/{storylineId}/query/delete": {
			"put": {
				"tags": [
					"Storyline"
				],
				"summary": "Delete a query from storyboard",
				"description": "To delete a query from storyboard",
				"parameters": [
					{
						"name": "storylineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeleteQueryStorylineRequest"
							}
						}
					}
				}
			}
		},
		"/storyline/{storylineId}/edit": {
			"put": {
				"tags": [
					"Storyline"
				],
				"summary": "Add or remove story points",
				"description": "Add or remove story points",
				"parameters": [
					{
						"name": "storylineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"query": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/storyline/{storylineId}/rearrange": {
			"put": {
				"tags": [
					"Storyline"
				],
				"summary": "Rearrange storypoint list",
				"description": "Rearrange storypoint list",
				"parameters": [
					{
						"name": "storylineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"query": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/storyline/{storylineId}/metadata": {
			"put": {
				"tags": [
					"Storyline"
				],
				"summary": "Change title for storyline",
				"description": "Change title for storyline",
				"parameters": [
					{
						"name": "storylineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"query": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/storyline/{storylineId}": {
			"put": {
				"tags": [
					"Storyline"
				],
				"summary": "Edit the storyboard",
				"description": "To Edit the storyboard",
				"parameters": [
					{
						"name": "storylineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "bff0b5cb-bb3b-49ae-b6ba-2694e89ac150"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EditStorylineRequest"
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"Storyline"
				],
				"summary": "Get the queries in storyboard",
				"description": "To get the queries in storyboard",
				"parameters": [
					{
						"name": "storylineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "bff0b5cb-bb3b-49ae-b6ba-2694e89ac150"
						}
					},
					{
						"name": "page_limit",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page_no",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/storyline/{storylineId}/users": {
			"put": {
				"tags": [
					"Storyline"
				],
				"summary": "Invite a user in storyboard",
				"description": "To invite a user in storyboard",
				"parameters": [
					{
						"name": "storylineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InviteUserStorylineRequest"
							}
						}
					}
				}
			}
		},
		"/storyline/{storylineId}/users/delete": {
			"put": {
				"tags": [
					"Storyline"
				],
				"summary": "Delete user from storyboard",
				"description": "To delete the user from storyboard",
				"parameters": [
					{
						"name": "storylineId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DeleteUserStorylineRequest"
							}
						}
					}
				}
			}
		},
		"/tags": {
			"post": {
				"tags": [
					"Tag"
				],
				"summary": "Create tags for query",
				"description": "Create tags for query",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"example": "any"
									},
									"dialogId": {
										"example": "any"
									},
									"tags": {
										"example": "any"
									},
									"appId": {
										"example": "any"
									},
									"keaConversationId": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"Tag"
				],
				"summary": "Search the tag",
				"description": "To search the tags",
				"parameters": [
					{
						"name": "searchTerm",
						"in": "query",
						"schema": {
							"type": "string",
							"example": "sa"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/customSpeechConfig": {
			"get": {
				"tags": [
					"Audio"
				],
				"summary": "Voice config",
				"description": "Voice config",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/v2/conversation": {
			"post": {
				"tags": [
					"Thread"
				],
				"deprecated": true,
				"summary": "Get queries from a dialog",
				"description": "Getting the queries from a dialogID",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/conversation/query": {
			"get": {
				"tags": [
					"Query"
				],
				"summary": "Get response from a conversation",
				"description": "Get response data for conversation id",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "keaConversationID",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/conversation": {
			"post": {
				"tags": [
					"Thread"
				],
				"summary": "Get queries in a dialog",
				"description": "Getting the queries in a dialog",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"dialog_id": {
										"example": "any"
									},
									"user_id": {
										"example": "any"
									},
									"tags": {
										"example": "any"
									},
									"page_no": {
										"example": "any"
									},
									"page_limit": {
										"example": "any"
									},
									"channel_type": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/appUsageHistory": {
			"post": {
				"tags": [
					"Metadata"
				],
				"summary": "Get app usage history",
				"description": "Getting app list based on app usage",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "channel-type",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/query-count": {
			"post": {
				"tags": [
					"Metadata"
				],
				"summary": "Send query count in a dialog",
				"description": "Sending the number of queries in a dialog",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DialogQueryCountRequest"
							}
						}
					}
				}
			}
		},
		"/bot/notification": {
			"post": {
				"tags": [
					"Notification"
				],
				"summary": "Store notifications from bot",
				"description": "API for storing notifications from bot",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/notification": {
			"post": {
				"tags": [
					"Notification"
				],
				"summary": "Store notifications",
				"description": "API for storing notification",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"notifications": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/query-sentiment": {
			"post": {
				"tags": [
					"Sentiment"
				],
				"summary": "Store user likes the query",
				"description": "API for storing wether user liked the query",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/apps/{appId}": {
			"get": {
				"tags": [
					"Metadata"
				],
				"summary": "Get app metadata",
				"description": "Get app metadata",
				"parameters": [
					{
						"name": "appId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/apps/sample_datasets": {
			"get": {
				"tags": [
					"Metadata"
				],
				"summary": "Get sample dataset",
				"description": "Get sample dataset details",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/apps/{appId}/user_defined_try_me_questions": {
			"get": {
				"tags": [
					"Query Suggestion"
				],
				"summary": "Get user defined tryme questions",
				"description": "get user defined try me questions",
				"parameters": [
					{
						"name": "appId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/apps/{appId}/peekdata": {
			"get": {
				"tags": [
					"Metadata"
				],
				"summary": "Retrieve top 100 rows from elastic",
				"description": "Retrieve top 100 rows from elastic",
				"parameters": [
					{
						"name": "appId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/apps/{appId}/metadata/column_details": {
			"get": {
				"tags": [
					"Metadata"
				],
				"summary": "Get column details by appId",
				"description": "Get column details by appId",
				"parameters": [
					{
						"name": "appId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/users/datasetsfolders": {
			"get": {
				"tags": [
					"Metadata"
				],
				"summary": "Get folder structure and apps used by user",
				"description": "Get folder structure and apps used by user",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "searchTerm",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sortBy",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "order",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/users/datasets": {
			"get": {
				"tags": [
					"Metadata"
				],
				"deprecated": true,
				"summary": "Get user apps - Mobile",
				"description": "Get user apps - Mobile",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/apps/{appId}/status": {
			"get": {
				"tags": [
					"Metadata"
				],
				"summary": "Get status of app",
				"description": "Status of the dataset such as inprogress, published, etc",
				"parameters": [
					{
						"name": "appId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/favorites/querymetadata": {
			"post": {
				"tags": [
					"Favorites"
				],
				"summary": "Add or remove query favorites",
				"description": "Add or remove query favorites",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"keaConversationId": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"Favorites"
				],
				"summary": "Get query favorites",
				"description": "Get query favorites",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "searchTerm",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/dialogs/{dialogId}/pin": {
			"post": {
				"tags": [
					"Pin"
				],
				"summary": "Add pin to dialog",
				"description": "Add pin to dialog",
				"parameters": [
					{
						"name": "dialogId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/users/details": {
			"get": {
				"tags": [
					"Metadata"
				],
				"summary": "Get user detail and online status",
				"description": "Get user detail and online status",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/campaign/list/add": {
			"post": {
				"tags": [
					"Query"
				],
				"summary": "Add contacts to zoho campaign",
				"description": "Add contacts to zoho campaign",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"emailids": {
										"example": "any"
									},
									"listname": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/user/usage/{period}": {
			"post": {
				"tags": [
					"Summary"
				],
				"summary": "User usage summary",
				"description": "User usage summary",
				"parameters": [
					{
						"name": "period",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"userDetails": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/dialogs/{dialogId}/status": {
			"post": {
				"tags": [
					"Thread"
				],
				"summary": "Get read/ unread status of a dialog",
				"description": "Get read/ unread status of a dialog",
				"parameters": [
					{
						"name": "dialogId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"action": {
										"example": "any"
									},
									"keaConversationId": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/notification/invite": {
			"post": {
				"tags": [
					"Invite"
				],
				"summary": "Create notification for invite",
				"description": "Create notification for invite",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/notification/invite/dialog": {
			"post": {
				"tags": [
					"Invite"
				],
				"summary": "Create notification for dialog invite",
				"description": "Create notification for dialog invite",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/apps/{appId}/users": {
			"get": {
				"tags": [
					"Metadata"
				],
				"summary": "Get app users",
				"description": "Get app users by appId",
				"parameters": [
					{
						"name": "appId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/parse-url": {
			"post": {
				"tags": [
					"Actions"
				],
				"summary": "Parse url",
				"description": "Parse url - embed response",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"url": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/dialogs/{dialogId}/restore": {
			"put": {
				"tags": [
					"Thread"
				],
				"summary": "Restore a dialog",
				"description": "Restore a dialog",
				"parameters": [
					{
						"name": "dialogId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/conversation/query/{keaConversationId}/restore": {
			"put": {
				"tags": [
					"Query"
				],
				"summary": "Restore a query",
				"description": "Restore a query",
				"parameters": [
					{
						"name": "keaConversationId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/v3/conversation": {
			"post": {
				"tags": [
					"Metadata"
				],
				"summary": "Get conversation list kea search",
				"description": "Get conversation list kea search",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "channel-type",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/bin": {
			"post": {
				"tags": [
					"Bin"
				],
				"summary": "Get deleted dialogs and queries list",
				"description": "Get deleted dialogs and queries list",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/bin/conversation": {
			"post": {
				"tags": [
					"Bin"
				],
				"summary": "Get historical response for deleted queries",
				"description": "Get historical response for deleted queries",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"user_id": {
										"example": "any"
									},
									"app_id": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/bin/conversation/query": {
			"get": {
				"tags": [
					"Bin"
				],
				"summary": "Get historical response by deleted query ID",
				"description": "Get historical response by deleted query ID",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "keaConversationId",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/kea-widget/{widgetId}": {
			"get": {
				"tags": [
					"Actions"
				],
				"summary": "Get Widget definition",
				"description": "Get Widget definition",
				"parameters": [
					{
						"name": "widgetId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/widget": {
			"post": {
				"tags": [
					"Actions"
				],
				"summary": "Create widget",
				"description": "Create widget",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/tryme": {
			"post": {
				"tags": [
					"Tryme"
				],
				"summary": "Validate try me for a particular user",
				"description": "Validate try me for a particular user",
				"parameters": [
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userName",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "emailId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "accountId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"userId": {
										"example": "any"
									},
									"userName": {
										"example": "any"
									},
									"emailId": {
										"example": "any"
									},
									"accountId": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/tryme/users": {
			"post": {
				"tags": [
					"Tryme"
				],
				"summary": "Validate try me for a list of users",
				"description": "Validate try me for a list of users",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"userDetail": {
										"example": "any"
									}
								}
							}
						}
					}
				}
			}
		},
		"/dialog/invite/users": {
			"get": {
				"tags": [
					"Thread"
				],
				"summary": "Get invited user list in a dialog",
				"description": "Get invited user list in a dialog",
				"parameters": [
					{
						"name": "appid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "dialogId",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/kea-action/distribution": {
			"post": {
				"tags": [
					"Actions"
				],
				"summary": "Create distribution",
				"description": "Create distribution",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			},
			"get": {
				"tags": [
					"Actions"
				],
				"summary": "Get distribution details",
				"description": "Get distribution details",
				"parameters": [
					{
						"name": "searchTerm",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			},
			"put": {
				"tags": [
					"Actions"
				],
				"summary": "Update distribution details",
				"description": "Update distribution details",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/kea-action/distribution/enable-disable": {
			"put": {
				"tags": [
					"Actions"
				],
				"summary": "Enable / disable distribution",
				"description": "Enable / disable distribution",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/kea-action/distribution/send": {
			"post": {
				"tags": [
					"Actions"
				],
				"summary": "Send distribution details",
				"description": "Send distribution details",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/createUserFilters": {
			"post": {
				"tags": [
					"RBAC"
				],
				"summary": "Create custom filters for appId by userId",
				"description": "Create custom filters for appId by userId",
				"parameters": [
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/ask/msteams": {
			"post": {
				"tags": [
					"Query"
				],
				"summary": "Ask MS teams",
				"description": "Ask MS teams",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/feedback/log": {
			"post": {
				"tags": [
					"Query"
				],
				"summary": "Log Feedback",
				"description": "Log Feedback",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/custom-appurl/{datasetName}": {
			"get": {
				"tags": [
					"Query"
				],
				"summary": "Get custom app url",
				"description": "Get custom app url",
				"parameters": [
					{
						"name": "datasetName",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/dialogs/{dialogId}/comments/count": {
			"get": {
				"tags": [
					"Thread"
				],
				"summary": "Get comments count in a dialog",
				"description": "Get comments count in a dialog",
				"parameters": [
					{
						"name": "dialogId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "userId",
						"in": "header",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/performance-test": {
			"get": {
				"tags": [
					"Query"
				],
				"summary": "Check performance test",
				"description": "Check performance test",
				"parameters": [
					{
						"name": "n",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/user/verification": {
			"post": {
				"tags": [
					"Metadata"
				],
				"summary": "User verification",
				"description": "User verification",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer"
			}
		},
		"schemas": {
			"HealthResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"example": "success"
					},
					"displayMessage": {
						"type": "string",
						"example": "Artifact service is up and running"
					},
					"internalErrorMessage": {
						"type": "string",
						"example": ""
					}
				}
			},
			"ArtifactV2Request": {
				"type": "object",
				"properties": {
					"keaConversationID": {
						"type": "string",
						"example": "ca635cc8-919e-4851-b2c2-5cbb3ad88832"
					},
					"dialogId": {
						"type": "string",
						"example": "20d259af-74e8-4a48-9261-824f300ac996"
					},
					"type": {
						"type": "string",
						"example": "normal"
					},
					"text": {
						"type": "string",
						"example": "breaking it down by city"
					},
					"from": {
						"type": "object",
						"properties": {
							"id": {
								"type": "number",
								"example": "97"
							},
							"name": {
								"type": "string",
								"example": "Sujith R"
							},
							"channelId": {
								"type": "string",
								"example": "keadesktopconv"
							},
							"accountId": {
								"type": "number",
								"example": "87"
							}
						}
					},
					"headers": {
						"type": "object",
						"properties": {
							"clientMetaData": {
								"type": "object",
								"properties": {
									"userAgent": {
										"type": "string",
										"example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36"
									},
									"os": {
										"type": "string",
										"example": "Windows"
									},
									"browser": {
										"type": "string",
										"example": "Chrome"
									},
									"device": {
										"type": "string",
										"example": "Unknown"
									},
									"os_version": {
										"type": "string",
										"example": "windows-10"
									},
									"browser_version": {
										"type": "string",
										"example": "111.0.0.0"
									},
									"deviceType": {
										"type": "string",
										"example": "desktop"
									},
									"orientation": {
										"type": "string",
										"example": "landscape"
									}
								}
							},
							"userid": {
								"type": "number",
								"example": "97"
							},
							"username": {
								"type": "string",
								"example": "Sujith R"
							},
							"loggedInUser": {
								"type": "string",
								"example": "sujith.r@purpleslate.in"
							},
							"accountId": {
								"type": "number",
								"example": "87"
							},
							"channelType": {
								"type": "string",
								"example": "keadesktopconv"
							},
							"appid": {
								"type": "string",
								"example": "abf5cf1c98e5a4e178900e30bc6bacf54"
							}
						}
					},
					"metadata": {
						"type": "object",
						"properties": {
							"bucketSize": {
								"type": "string",
								"format": "nullable"
							},
							"requestType": {
								"type": "string",
								"example": ""
							},
							"duplicateEntityValue": {
								"type": "string",
								"example": ""
							},
							"choiceSelected": {
								"type": "string",
								"example": "city"
							},
							"responseType": {
								"type": "string",
								"example": ""
							},
							"ignoreNLU": {
								"type": "boolean"
							},
							"pageSize": {
								"type": "number",
								"example": "30"
							},
							"pageNumber": {
								"type": "number",
								"example": "1"
							},
							"filters": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"choices": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"entities": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"pageNumberChange": {
								"type": "boolean"
							},
							"freeText": {
								"type": "boolean"
							},
							"followUpPromptType": {
								"type": "string",
								"example": "breakDownFollowUpPrompt"
							},
							"queryCategory": {
								"type": "string",
								"format": "nullable"
							},
							"isWakeWord": {
								"type": "boolean"
							},
							"measureAction": {
								"type": "string",
								"example": "city"
							},
							"searchQuery": {
								"type": "string",
								"example": "breaking it down by city"
							}
						}
					},
					"spellCheck": {
						"type": "boolean"
					},
					"isMultiUser": {
						"type": "boolean"
					},
					"isNewDialogThreadRequired": {
						"type": "string",
						"format": "nullable"
					},
					"locale": {
						"type": "string",
						"example": "en-US"
					},
					"timezone": {
						"type": "string",
						"example": "Asia/Calcutta"
					},
					"appName": {
						"type": "string",
						"example": "abf5cf1c98e5a4e178900e30bc6bacf54"
					}
				}
			},
			"DetailedFeedbackRequest": {
				"type": "object",
				"properties": {
					"enviroment": {
						"type": "object",
						"properties": {
							"os": {
								"type": "string",
								"example": "Windows"
							},
							"osVersion": {
								"type": "string",
								"example": "windows-10"
							},
							"browser": {
								"type": "string",
								"example": "Chrome"
							},
							"browserVersion": {
								"type": "string",
								"example": "111.0.0.0"
							},
							"MACAddress": {
								"type": "string",
								"example": ""
							},
							"IPaddress": {
								"type": "string",
								"example": "223.228.157.43"
							}
						}
					},
					"application": {
						"type": "string",
						"example": "KEA_CHAT"
					},
					"context": {
						"type": "object",
						"properties": {
							"applicationURL": {
								"type": "string",
								"example": "https://keachatbeta.purpleslate.com/chat?app=a49b2d9410b874db9a654e39bbc6caa53&thread=e8c2c806-faf6-4d4e-8596-2de84ee24714"
							},
							"appId": {
								"type": "string",
								"example": "a49b2d9410b874db9a654e39bbc6caa53"
							},
							"query": {
								"type": "string",
								"example": "sales"
							},
							"keaConversationId": {
								"type": "string",
								"example": "q_041f1769-3c18-432d-bb79-1f80ac6f6594"
							},
							"dialogId": {
								"type": "string",
								"example": "e8c2c806-faf6-4d4e-8596-2de84ee24714"
							},
							"userRole": {
								"type": "string",
								"example": "creator"
							},
							"dataSet": {
								"type": "string",
								"example": "Sales"
							},
							"lastUsedQuestion": {
								"type": "string",
								"example": "sales"
							},
							"lastUsedState": {
								"type": "string",
								"format": "nullable"
							}
						}
					},
					"feedbackType": {
						"type": "string",
						"example": "SUGGESTION_FEEDBACK"
					},
					"feeedback": {
						"type": "object",
						"properties": {
							"isHelpful": {
								"type": "boolean"
							}
						}
					},
					"comments": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {}
						},
						"example": []
					},
					"userDetail": {
						"type": "object",
						"properties": {
							"userRole": {
								"type": "string",
								"example": "creator"
							},
							"signInDateTime": {
								"type": "string",
								"format": "date-time",
								"example": "2023-03-30T22:55:57+05:30"
							},
							"sessionDuration": {
								"type": "number",
								"example": "1719000"
							}
						}
					}
				}
			},
			"DialogSearchRequest": {
				"type": "object",
				"properties": {
					"page_limit": {
						"type": "number",
						"example": "50"
					},
					"page_no": {
						"type": "number",
						"example": "1"
					},
					"search_term": {
						"type": "string",
						"example": ""
					}
				}
			},
			"CreateStorylineRequest": {
				"type": "object",
				"properties": {
					"title": {
						"type": "string",
						"example": "sample"
					},
					"description": {
						"type": "string",
						"example": ""
					}
				}
			},
			"SearchStorylineRequest": {
				"type": "object",
				"properties": {
					"page_no": {
						"type": "number",
						"example": "1"
					},
					"page_limit": {
						"type": "number",
						"example": "5"
					},
					"query": {
						"type": "string",
						"example": "g"
					},
					"queryId": {
						"type": "string",
						"example": "q_041f1769-3c18-432d-bb79-1f80ac6f6594"
					}
				}
			},
			"AddQueryStorylineRequest": {
				"type": "object",
				"properties": {
					"query": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"queryId": {
									"type": "string",
									"example": "q_041f1769-3c18-432d-bb79-1f80ac6f6594"
								},
								"annotation": {
									"type": "string",
									"example": "<p>goood</p>"
								}
							}
						},
						"example": [
							{
								"queryId": "q_041f1769-3c18-432d-bb79-1f80ac6f6594",
								"annotation": "<p>goood</p>"
							}
						]
					}
				}
			},
			"DeleteQueryStorylineRequest": {
				"type": "object",
				"properties": {
					"query": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"example": [
							"q_11a8d862-db31-43de-ae71-3a8792ac4251"
						]
					}
				}
			},
			"EditStorylineRequest": {
				"type": "object",
				"properties": {
					"title": {
						"type": "string",
						"example": "god"
					},
					"description": {
						"type": "string",
						"example": "<p>goood To see</p>"
					}
				}
			},
			"InviteUserStorylineRequest": {
				"type": "object",
				"properties": {
					"users": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"example": [
							"18"
						]
					}
				}
			},
			"DeleteUserStorylineRequest": {
				"type": "object",
				"properties": {
					"users": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"example": [
							"2",
							"3",
							"4",
							"5"
						]
					}
				}
			},
			"DialogQueryCountRequest": {
				"type": "object",
				"properties": {
					"appID": {
						"type": "string",
						"example": "abf5cf1c98e5a4e178900e30bc6bacf54"
					},
					"dialogID": {
						"type": "string",
						"example": "e580fac2-5291-4354-a3e8-582c209229f3"
					}
				}
			}
		}
	}
}