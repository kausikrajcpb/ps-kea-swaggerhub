{
	"openapi": "3.0.3",
	"info": {
		"title": "Purpleslate Kea NLP Service API",
		"description": "Welcome to Kea NLP Service API Documentation.\n## Overview\nThe Kea NLP Service API implements a [RESTful API Design](https://learn.microsoft.com/en-us/azure/architecture/best-practices/api-design). The API has predictable resource-oriented URLs, accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\n## Rate Limiting\nTo ensure a fair use of our services, we enforce rate limits on API requests. The rate limit is set at 100 requests per minute. If you exceed this limit, you will receive a `429 Too Many Requests` response.\n## Error Handling\nThe API uses standard HTTP status codes to indicate the success or failure of an API request. Here are some common status codes:\n- `200 OK`: The request was successful.\n- `400 Bad Request`: The request was invalid or cannot be otherwise served.\n- `401 Unauthorized`: Authentication failed or user does not have permissions for the requested operation.\n- `404 Not Found`: The requested resource could not be found.\n- `500 Internal Server Error`: An error occurred on the server.",
		"contact": {
			"email": "kea@purpleslate.in"
		},
		"license": {
			"name": "ISC License",
			"url": "https://www.isc.org/licenses/"
		},
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "http://localhost:9710/ps-kea-nlp-service",
			"description": "localhost server"
		},
		{
			"url": "https://api-kea.dev.purpleslate.com/api/v1/ps-kea-nlp/",
			"description": "Dev server"
		}
	],
	"tags": [
		{
			"name": "Health",
			"description": "Endpoints"
		},
		{
			"name": "Query",
			"description": "Endpoints"
		},
		{
			"name": "Explore",
			"description": "Endpoints"
		},
		{
			"name": "Insights",
			"description": "Endpoints"
		}
	],
	"paths": {
		"/health": {
			"get": {
				"tags": [
					"Health"
				],
				"summary": "NLP service health check",
				"description": "Checks the NLP service health",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Health Check API Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HealthResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not found"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/keaNLP": {
			"post": {
				"tags": [
					"Query"
				],
				"deprecated": true,
				"summary": "Kea NLP service",
				"description": "Kea NLP service",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/keaWebNLP": {
			"post": {
				"tags": [
					"Query"
				],
				"summary": "Kea Web NLP service",
				"description": "Answer for the query",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/WebNLPRequest"
							}
						}
					}
				}
			}
		},
		"/getAppDB/{appId}": {
			"get": {
				"tags": [
					"Query"
				],
				"summary": "Get App collection",
				"description": "To get App collection by appId",
				"parameters": [
					{
						"name": "appId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/keaRelevantEntityValues": {
			"post": {
				"tags": [
					"Explore"
				],
				"deprecated": true,
				"summary": "Result for the query",
				"description": "Result for the query",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/keaRelevantEntityValuesv2": {
			"post": {
				"tags": [
					"Explore"
				],
				"summary": "Result for the query",
				"description": "Result for the query",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RelavantEntityValuesV2Request"
							}
						}
					}
				}
			}
		},
		"/keaQueryBuilder": {
			"post": {
				"tags": [
					"Query"
				],
				"deprecated": true,
				"summary": "Query Builder",
				"description": "Query Builder",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/keaUsageAnalytics": {
			"post": {
				"tags": [
					"Query"
				],
				"deprecated": true,
				"summary": "Usage Analytics",
				"description": "Usage Analytics",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/keaGetFilterValues": {
			"post": {
				"tags": [
					"Query"
				],
				"deprecated": true,
				"summary": "Get Filter Values",
				"description": "Get Filter Values",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/keaGetConversationList": {
			"get": {
				"tags": [
					"Query"
				],
				"deprecated": true,
				"summary": "Get Converstation List",
				"description": "Get Converstation List",
				"parameters": [
					{
						"name": "userid",
						"in": "header",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "user_id",
						"in": "query",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "dialog_id",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/prettier": {
			"get": {
				"tags": [
					"Query"
				],
				"deprecated": true,
				"summary": "Prettier",
				"description": "Prettier",
				"parameters": [
					{
						"name": "path",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/geoMaps": {
			"get": {
				"tags": [
					"Insights"
				],
				"summary": "Get geometric location",
				"description": "To get geometric location for a country",
				"parameters": [
					{
						"name": "country",
						"in": "query",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/transformchart": {
			"post": {
				"tags": [
					"Query"
				],
				"summary": "Chart data",
				"description": "Chart data",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TransformChartRequest"
							}
						}
					}
				}
			}
		},
		"/insightSummary": {
			"post": {
				"tags": [
					"Insights"
				],
				"summary": "Insight summary",
				"description": "Insight summary",
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer"
			}
		},
		"schemas": {
			"HealthResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"example": "success"
					},
					"displayMessage": {
						"type": "string",
						"example": "NLP service is up and running"
					},
					"internalErrorMessage": {
						"type": "string",
						"example": ""
					}
				}
			},
			"WebNLPRequest": {
				"type": "object",
				"properties": {
					"entities": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string",
									"example": "measure"
								},
								"name": {
									"type": "string",
									"example": "measure"
								},
								"operator": {
									"type": "string",
									"example": ""
								},
								"resolutionValue": {
									"type": "string",
									"example": "sales"
								},
								"value": {
									"type": "string",
									"example": "sales"
								}
							}
						},
						"example": [
							{
								"type": "measure",
								"name": "measure",
								"operator": "",
								"resolutionValue": "sales",
								"value": "sales"
							}
						]
					},
					"indexName": {
						"type": "string",
						"example": "abf5cf1c98e5a4e178900e30bc6bacf54"
					},
					"spellCheck": {
						"type": "object",
						"properties": {
							"spellChanged": {
								"type": "boolean"
							},
							"updatedText": {
								"type": "string",
								"example": ""
							},
							"actualText": {
								"type": "string",
								"example": ""
							}
						}
					},
					"metaData": {
						"type": "object",
						"properties": {
							"bucketSize": {
								"type": "string",
								"format": "nullable"
							},
							"requestType": {
								"type": "string",
								"example": ""
							},
							"duplicateEntityValue": {
								"type": "string",
								"example": ""
							},
							"choiceSelected": {
								"type": "string",
								"example": ""
							},
							"responseType": {
								"type": "string",
								"example": ""
							},
							"ignoreNLU": {
								"type": "boolean"
							},
							"pageSize": {
								"type": "number",
								"example": "30"
							},
							"pageNumber": {
								"type": "number",
								"example": "1"
							},
							"filters": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"choices": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"entities": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"pageNumberChange": {
								"type": "boolean"
							},
							"freeText": {
								"type": "boolean"
							},
							"followUpPromptType": {
								"type": "string",
								"example": ""
							},
							"queryCategory": {
								"type": "string",
								"format": "nullable"
							},
							"isWakeWord": {
								"type": "boolean"
							},
							"searchQuery": {
								"type": "string",
								"example": "sales in 2019"
							}
						}
					},
					"utterance": {
						"type": "string",
						"example": "sales in 2019"
					},
					"user": {
						"type": "object",
						"properties": {
							"userAppId": {
								"type": "string",
								"example": "512a949f-8bf6-45a7-8045-6f14ba01b7cc||a4b3e763f42f4433ea16497498c056e32"
							},
							"userId": {
								"type": "string",
								"example": "97"
							},
							"name": {
								"type": "string",
								"example": "Sujith R"
							},
							"accountId": {
								"type": "string",
								"example": "87"
							},
							"channelId": {
								"type": "string",
								"example": "keadesktopconv"
							},
							"avatar": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"example": "Remy"
									},
									"image": {
										"type": "string",
										"example": "https://previews.123rf.com/images/mumut/mumut1408/mumut140800008/30899672-vector-illustration-of-cartoon-star-for-design-element.jpg"
									}
								}
							}
						}
					}
				}
			},
			"RelavantEntityValuesV2Request": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"example": "normal"
					},
					"text": {
						"type": "string",
						"example": "max sales"
					},
					"from": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"example": "97"
							},
							"name": {
								"type": "string",
								"example": "Sujith R"
							},
							"channelId": {
								"type": "string",
								"example": "keadesktopconv"
							},
							"accountId": {
								"type": "string",
								"example": "87"
							}
						}
					},
					"metadata": {
						"type": "object",
						"properties": {
							"bucketSize": {
								"type": "string",
								"format": "nullable"
							},
							"requestType": {
								"type": "string",
								"example": ""
							},
							"duplicateEntityValue": {
								"type": "string",
								"example": ""
							},
							"choiceSelected": {
								"type": "string",
								"example": ""
							},
							"responseType": {
								"type": "string",
								"example": ""
							},
							"ignoreNLU": {
								"type": "boolean"
							},
							"pageSize": {
								"type": "number",
								"example": "30"
							},
							"pageNumber": {
								"type": "number",
								"example": "1"
							},
							"filters": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"choices": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"entities": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"pageNumberChange": {
								"type": "boolean"
							},
							"freeText": {
								"type": "boolean"
							},
							"followUpPromptType": {
								"type": "string",
								"example": ""
							},
							"queryCategory": {
								"type": "string",
								"format": "nullable"
							},
							"isWakeWord": {
								"type": "boolean"
							}
						}
					},
					"spellCheck": {
						"type": "boolean"
					},
					"locale": {
						"type": "string",
						"example": "en-US"
					},
					"appName": {
						"type": "string",
						"example": "a6df101eb68414356b7e663b5d049010d"
					},
					"entities": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string",
									"example": "dimension_value"
								},
								"name": {
									"type": "string",
									"example": "action"
								},
								"operator": {
									"type": "string",
									"example": ""
								},
								"resolutionValue": {
									"type": "string",
									"example": "max"
								},
								"value": {
									"type": "string",
									"example": "max"
								},
								"displayName": {
									"type": "string",
									"example": "operation"
								}
							}
						},
						"example": [
							{
								"type": "dimension_value",
								"name": "action",
								"operator": "",
								"resolutionValue": "max",
								"value": "max",
								"displayName": "operation"
							}
						]
					},
					"selectedField": {
						"type": "string",
						"example": "country"
					},
					"searchTerm": {
						"type": "string",
						"example": ""
					}
				}
			},
			"TransformChartRequest": {
				"type": "object",
				"properties": {
					"actualChartType": {
						"type": "string",
						"example": "c1"
					},
					"expectedChartType": {
						"type": "string",
						"example": "c18"
					},
					"chartData": {
						"type": "object",
						"properties": {
							"infoTooltip": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"percentageDistribution": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": [
												"36.84"
											]
										},
										"recordCount": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {}
											},
											"example": []
										}
									}
								},
								"example": [
									{
										"percentageDistribution": [
											"36.84",
											"32.15",
											"31.01"
										]
									},
									{
										"recordCount": [
											2959,
											9573,
											3318
										]
									}
								]
							},
							"xAxis": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"example": [
									"Technology",
									"Office Supplies"
								]
							},
							"yAxis": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"data": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"fieldLabel": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {}
								},
								"example": []
							},
							"range": {
								"type": "object",
								"properties": {}
							},
							"chartSpecificOptions": {
								"type": "object",
								"properties": {}
							},
							"chartType": {
								"type": "string",
								"example": "bar"
							},
							"yAxisLabel": {
								"type": "string",
								"example": "Sales"
							},
							"chartTitle": {
								"type": "string",
								"example": "Sales by category"
							},
							"xAxisLabel": {
								"type": "string",
								"example": "Category"
							},
							"chartNotification": {
								"type": "string",
								"example": ""
							},
							"alternateCharts": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"example": [
									"c21"
								]
							},
							"chartId": {
								"type": "string",
								"example": "c1"
							},
							"chartLibId": {
								"type": "string",
								"example": "l1"
							},
							"isExcludeZeroFilter": {
								"type": "boolean"
							}
						}
					},
					"queryCategory": {
						"type": "string",
						"example": "breakDownMeasureByDimension"
					}
				}
			}
		}
	}
}